version: "3.8"

services: 
    chronicler_host_test:
        image: postgres:13.4
        container_name: chronicler_host_test
        restart: "no"
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
            timeout: 45s
            interval: 10s
            retries: 2
        volumes: 
            - chronicler_volume_test:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=${SQL_ROOT_PASSWORD:-unsecured_password}
        ports:
            - 5433:5432
        cap_add:
            - SYS_NICE  # CAP_SYS_NICE (gives sql cpu priority)

    rest-server_test:
        build:
            context: .
            dockerfile: Dockerfile_functional
        container_name: rest-server_test
        restart: "no"
        depends_on:
            chronicler_host_test:
                condition: service_healthy
        environment: 
            - DB_PASS=${SQL_ROOT_PASSWORD:-unsecured_password}
            - ADMIN_PASS=${ADMIN_PASS:-password123}
            - DOCKER_FLAG=1
            - PYTHONUNBUFFERED=1
            - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@email.com}
            - ADMIN_ID=${ADMIN_ID:-123}
            - ORPHANAGE_ID=${ORPHANAGE_ID:-321}
            - ORPHAN_EMAIL=${ORPHAN_EMAIL:-orphanage@email.com}
            
        ports:
            - 5001:5000
        volumes:
            - ./:/chronicler

volumes:
    chronicler_volume_test:
        name: chronicler_volume_test

networks: 
    default:
        name: chronicler_back_test
        driver: bridge